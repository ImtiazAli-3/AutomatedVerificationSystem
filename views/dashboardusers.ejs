<%- include('header') %>
<!-- page that contains ALL of the users; admins and customers alike. search bar can be used
to check for id, email address, address, city etc.  -->
<div id="page-container">
  <main id="content-wrap">
    <form id="searchForm">
      <input type="text" placeholder="Search Items..." name="q" id="searchInput">
      <button type="submit">Search</button>
    </form>
    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Email</th>
          <th>Name</th>
          <th>Address</th>
          <th>Post Code</th>
          <th>City</th>
          <th>Role</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="searchResultsBody">
        <% users.forEach(user => { %>
          <tr>
            <td><%= user.id %></td>
            <td><%= user.email %></td>
            <td><%= user.name %> <%= user.lastname %></td>
            <td><%= user.address %></td>
            <td><%= user.post_code %></td>
            <td><%= user.city %></td>
            <td><%= user.role %></td>
            <td>
              <a href="/admin/users/edit/<%= user.id %>">Edit</a> |
              <a href="/admin/users/delete/<%= user.id %>" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </main>
<%- include('footer') %>
</div>
<script>
document.getElementById('searchForm').addEventListener('submit', async (event) => {
  event.preventDefault();
  const searchTerm = document.getElementById('searchInput').value.trim();
  if (!searchTerm) {
    alert('Please enter a search term');
    return;
  }

  try {
    const response = await fetch(`/dashboardusers/search?q=${encodeURIComponent(searchTerm)}`);
    if (!response.ok) {
      throw new Error('Failed to fetch results');
    }
    const users = await response.json();

    const resultsTable = document.getElementById('searchResultsBody');
    resultsTable.innerHTML = ''; // Clear previous results

    users.forEach(user => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${user.id}</td>
        <td>${user.email}</td>
        <td>${user.name} ${user.lastname}</td>
        <td>${user.address}</td>
        <td>${user.post_code}</td>
        <td>${user.city}</td>
        <td>${user.role}</td>
        <td>
          <a href="/admin/users/edit/${user.id}">Edit</a> |
          <a href="/admin/users/delete/${user.id}" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
        </td>
      `;
      resultsTable.appendChild(row);
    });
  } catch (error) {
    console.error('Error during search:', error);
    alert('Error fetching search results');
  }
});
</script>
<!-- css generated by chat gpt with prompt 'enhance the layout and make this readable' -->
<style>
    table {
      width: 99%;
      border-collapse: collapse;
      margin: 5px;
    }
    table, th, td {
      border: 1px solid #ddd;
      text-align: left;
      padding: 8px;
    }
    th {
      background-color: #f2f2f2;
    }
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    tr:hover {
      background-color: #e8e8e8;
    }
    .description {
      max-width: 300px; /* Adjust as needed */
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    .description-cell {
      max-height: 80px; /* Fixed height for the cell */
      overflow-y: auto; /* Vertical scrolling */
      overflow-x: hidden; /* Hide horizontal scroll */
    }

    #searchForm {
  display: flex;
  justify-content: center; /* Centers the form in the middle of the page */
  padding: 20px;
  gap: 10px; /* Space between input and button */
}

#searchInput {
  width: 100%;
  max-width: 300px; /* Maximum width of the search input */
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

#searchForm button {
  padding: 10px 15px;
  background-color: #007bff; /* Button background color */
  color: white; /* Button text color */
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

#searchForm button:hover {
  background-color: #0056b3;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
  #searchForm {
    flex-direction: column; /* Stack input and button vertically on small screens */
  }

  #searchInput,
  #searchForm button {
    width: calc(100% - 40px); /* Full width minus padding */
  }
}
  </style>
  